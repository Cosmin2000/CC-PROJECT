version: '3.8'

services:
  mongo:
    image: mongo:4.4.18
    ports:
      - 27017:27017
    volumes:
      - /root/db/mongo:/data/db
      - /root/db/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - mongoexpress-network
      - mongo-auth-network
      - mongo-io-network
    deploy:
      placement:
        constraints: [node.role == manager]

  mongoexpress:
    image: mongo-express
    ports:
      - 8081:8081
    environment: 
      - ME_CONFIG_MONGODB_URL=mongodb://mongo.database.svc.cluster.local:27017
    networks:
      - mongoexpress-network
      - kong-mongoexpress-network
    deploy:
      placement:
        constraints: [node.role == manager]

  auth_service:
    image: accs2023/proiect_idp_auth:latest
    depends_on:
      - mongo
    ports:
      - 4002:4002
    networks:
      - mongo-auth-network
      - kong-auth-network
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 1
      update_config:
        parallelism: 1
        order: start-first
      rollback_config:
        parallelism: 1
        order: start-first

  business_service:
    image: registry.gitlab.com/proiect-idp-weather-app-c1/weather-service:latest
    depends_on:
      - mongo
    ports:
      - 6000:6000
    networks:
      - business-io-network
      - kong-business-network
      - monitoring
    deploy:
      replicas: 3
      placement:
        max_replicas_per_node: 2
      update_config:
        parallelism: 2
        order: start-first
      rollback_config:
        parallelism: 1
        order: start-first

  io-service:
    image: registry.gitlab.com/proiect-idp-weather-app-c1/ioservice:latest
    depends_on:
      - mongo
    ports:
      - 8000:8000
    networks:
      - mongo-io-network
      - business-io-network
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 1
      update_config:
        parallelism: 1
        order: start-first
      rollback_config:
        parallelism: 1
        order: start-first

  kong:
    image: kong:latest
    volumes:
      - /root/Kong:/usr/local/kong/declarative
    environment:
      KONG_DATABASE: 'off'
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - 80:8000
      - 443:8443
      - 8001:8001
      - 8444:8444
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - kong-auth-network
      - kong-business-network
      - kong-mongoexpress-network

  prometheus:
    image: prom/prometheus
    depends_on:
      - business_service
    volumes:
      - /root/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    networks:
      - monitoring
      - visualizing

  node_exporter:
    image: prom/node-exporter
    deploy:
      mode: global
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    deploy:
      mode: global
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    volumes:
      - grafana-volume:/var/lib/grafana
    ports:
      - 3000:3000
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - visualizing

volumes:
  mongo:
  wal:
  grafana-volume:

networks:
  visualizing:
    driver: overlay
  monitoring:
    driver: overlay
  kong-mongoexpress-network:
    driver: overlay
  kong-auth-network:
    driver: overlay
  kong-business-network:
    driver: overlay 
  mongo-auth-network:
    driver: overlay
  mongoexpress-network:
    driver: overlay
  mongo-io-network:
    driver: overlay
  business-io-network:
    driver: overlay
